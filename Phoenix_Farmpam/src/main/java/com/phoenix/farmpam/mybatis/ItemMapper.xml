<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="item">

	<!-- 유저의 주문 목록 얻어오기 -->
	<select id="getUsersOrdersList" parameterType="string" resultType="ordersDto">
		SELECT *
		FROM orders
		WHERE users_idx=#{users_idx}
		ORDER BY orders_idx DESC
	</select>

	<!-- 해당 판매자에게 들어온 주문 리스트 얻어오기 -->
	<select id="getSellorOrdersList" parameterType="string" resultType="ordersDto">
		SELECT *
		FROM orders
		WHERE farmer_idx=#{farmer_idx}
		ORDER BY orders_idx DESC
	</select>
   <!-- 상품 목록 -->
   <select id="getListItem" resultType="itemDto" parameterType="itemDto">
      select result2.* from
      (SELECT result1.*, rownum as rnum
      FROM (SELECT item_idx, item_image, item_title, item_content, item_price, item_stock, farmer_email
      FROM item ORDER BY item_stock) result1 
      where farmer_email= #{farmer_email }
      <choose>
         <when test="item_title != null">
            AND item_title LIKE '%'||#{item_title}||'%'
         </when>
      </choose>
      ) result2 <![CDATA[
      where rnum >= #{startRowNum} and rnum <= #{endRowNum}]]>
   </select>

   <select id="getCount" parameterType="itemDto" resultType="int">
      SELECT NVL(MAX(ROWNUM),0)
      FROM item
      WHERE farmer_email= #{farmer_email }
      <choose>
         <when test="item_title != null">
            AND item_title LIKE '%'||#{item_title}||'%'
         </when>
      </choose>
   </select>
	
	<select id="getData3" parameterType="int" resultType="itemDto">
		SELECT farmer_email, item_idx, item_title, item_price, item_stock, item_category_top_idx, item_content, item_image
		FROM item
		WHERE item_idx=#{item_idx }
	</select>
	
	<insert id="insertItem" parameterType="itemDto">
		INSERT INTO item
		(item_idx, farmer_email, item_title, item_price, item_stock, item_content, item_image, item_category_top_idx, item_category_top_ref)
		VALUES(item_seq.NEXTVAL, #{farmer_email}, #{item_title}, #{item_price}, #{item_stock}, #{item_content}, #{item_image}, #{item_category_top_idx}, #{item_category_top_ref})
	</insert>
	
	<delete id="delete" parameterType="int">
		DELETE FROM item
		WHERE item_idx=#{item_idx}
	</delete>
	
	<update id="update" parameterType="itemDto">
		UPDATE item
		SET item_image=#{item_image}, item_title=#{item_title}, item_content=#{item_content}, item_price=#{item_price}, item_stock=#{item_stock}
		WHERE item_idx=#{item_idx}
	</update>
	
	<!-- 상품 가격 가져오기 -->
	<select id="getPrice" parameterType="int" resultType="int">
		SELECT item_price
		FROM item
		WHERE item_idx=#{item_idx}
	</select>
	
	<!-- 계좌 잔고 줄이기 -->
	<update id="minusMoney" parameterType="itemDto">
		UPDATE new_users
		SET users_account=users_account-#{item_price}
		WHERE users_email=#{users_email}
	</update>
	
	<!-- 상품 재고 1 감소시키기 -->
	<update id="minusStock" parameterType="itemDto">
		UPDATE item
		SET item_stock=item_stock-#{orders_item_total}
		WHERE item_idx=#{item_idx}
	</update>
	
	<!-- 주문 테이블에 주문 정보 추가 -->
	<insert id="addOrders" parameterType="ordersDto">
		INSERT INTO orders
		(orders_idx, users_email, orders_price, orders_regdate, orders_item_total, orders_addr, item_idx, item_price, orders_phone, item_title, farmer_email)
		VALUES(orders_seq.NEXTVAL, #{users_email}, #{orders_price}, SYSDATE, #{orders_item_total}, #{orders_addr}, #{item_idx}, #{item_price}, #{orders_phone}, #{item_title}, #{farmer_email})
	</insert>

	<sql id="searchCondition">
		<choose>
			<when test="item_title != null and item_content != null">
				WHERE item_title LIKE '%'||#{item_title}||'%' 
				OR item_content LIKE '%'||#{item_content}||'%'
			</when>
			<when test="item_title != null">
				WHERE item_title LIKE '%'||#{item_title}||'%'
			</when>
		</choose>
	</sql>
	
	<select id="getList" parameterType="itemDto" resultType="itemDto">
        select result2.* from 
        (select result1.* , rownum as rnum from 
        (SELECT item_idx, item_title, item_price, item_content, item_image, item_category_top_idx, item_category_top_ref FROM item 
            <choose>
                <when test="item_category_top_ref != 0 and item_category_top_idx != 0"> 
                    WHERE item_category_top_ref = #{item_category_top_ref} and item_category_top_idx = #{item_category_top_idx}
                </when>
                <when test="item_category_top_idx != 0">
                    WHERE item_category_top_idx = #{item_category_top_idx}
                </when>
                <when test="item_category_top_ref != 0"> 
                    WHERE item_category_top_ref = #{item_category_top_ref}
                </when>
            </choose>
     ) result1 
     <include refid="searchCondition"/>
     order by item_idx desc) result2  WHERE rnum between #{startRowNum} AND #{endRowNum}
    </select>
	
	<update id="minusCount" parameterType="int">
		UPDATE item
		SET item_stock=item_stock-1
		where item_idx=#{item_idx}
	</update>
	
	<select id="getData" parameterType="int" resultType="itemDto"> 
		SELECT result1.*
		FROM item
			(SELECT item_idx,item_title, item_price,item_stock,item_content, item_image, farmer_email,
				LAG(item_idx,1,0) OVER (ORDER BY item_idx DESC) AS prevNum,
				LEAD(item_idx,1,0) OVER (ORDER BY item_idx DESC) AS nextNum
			FROM item) result1
		WHERE item_idx=#{item_idx}
	</select>
	
	<select id="getData2" parameterType="itemDto" resultType="itemDto">
		SELECT result1.*
		FROM
			(SELECT item_idx, item_title, item_price,item_stock, item_content, item_image, farmer_email,
				LAG(item_idx,1,0) OVER (ORDER BY item_idx DESC) AS prevNum,
				LEAD(item_idx,1,0) OVER (ORDER BY item_idx DESC) AS nextNum
			FROM item
			<include refid="searchCondition"/>
			) result1
		WHERE item_idx=#{item_idx}	
	</select>
	
	
	
	<!--  *****************************************************************************   -->
	<!--  vue  -->
	
		<select id="getShopCategoryList" parameterType="itemDto" resultType="itemDto">
        select result2.* from 
        (select result1.* , rownum as rnum from 
        (SELECT item_idx, item_title, item_price, item_content, item_image, item_category_top_idx, item_category_top_ref FROM item 
            <choose>
                <when test="item_category_top_ref != 0 and item_category_top_idx != 0"> 
                    WHERE item_category_top_ref = #{item_category_top_ref} and item_category_top_idx = #{item_category_top_idx}
                </when>
                <when test="item_category_top_idx != 0">
                    WHERE item_category_top_idx = #{item_category_top_idx}
                </when>
                <when test="item_category_top_ref != 0"> 
                    WHERE item_category_top_ref = #{item_category_top_ref}
                </when>
            </choose>
     ) result1 
     <include refid="searchCondition"/>
     order by item_idx desc) result2  WHERE rnum between #{startRowNum} AND #{endRowNum}
    </select>
    
	
	<select id="getShopCategoryCount" parameterType="itemDto" resultType="int">
		SELECT NVL(MAX(ROWNUM),0)
		FROM item
		<choose>
			<when test="item_category_top_ref != 0 and item_category_top_idx != 0"> 
				WHERE item_category_top_ref = #{item_category_top_ref} and item_category_top_idx = #{item_category_top_idx}
			</when>
			<when test="item_category_top_idx != 0">
				WHERE item_category_top_idx = #{item_category_top_idx}
			</when>
			<when test="item_category_top_ref != 0"> 
				WHERE item_category_top_ref = #{item_category_top_ref}
			</when>
		</choose>
	</select>
	
	<select id="getShopCategory" parameterType="int" resultType="itemCategoryTopDto">
		select b.item_category_low_name ,a.item_category_top_idx
		from item_category_top a inner join item_category_low b
		on a.item_category_low_idx = b.item_category_low_idx
		where item_category_top_ref = #{item_category_top_ref}
	</select>
	
	<select id="getMyShopDetail" parameterType="int" resultType="itemDto">
		SELECT i.farmer_email, item_idx, item_title, item_price, item_stock, item_category_top_idx, item_content, item_image, farmer_name
		FROM item i inner join farmer f on i.farmer_email = f.farmer_email
		WHERE item_idx=#{item_idx}
	</select>
	
	<select id="getMyShopList" parameterType="itemDto" resultType="itemDto">
		SELECT result2.* from
		(SELECT result1.*, rownum as rnum FROM
		(SELECT item_idx, item_title, item_price, item_content, item_image, item_category_top_idx, item_category_top_ref, i.farmer_email, farmer_name
		FROM item i inner join farmer f on i.farmer_email = f.farmer_email order by item_idx desc) result1 where farmer_email like '%'||#{farmer_email}||'%' ) result2
			<choose>
			<when test="item_title != null and item_category_top_ref != 0">
				WHERE item_title LIKE '%'||#{item_title}||'%' and item_category_top_ref = #{item_category_top_ref} and rnum between #{startRowNum} AND #{endRowNum}
			</when>
			<when test="item_category_top_ref != 0">
				where item_category_top_ref = #{item_category_top_ref} and rnum between #{startRowNum} AND #{endRowNum}
			</when>
			<otherwise>
				where rnum between #{startRowNum} AND #{endRowNum}
			</otherwise>
			</choose>
		</select>
	
		<select id="getMyShopCount" parameterType="itemDto" resultType="int">
		SELECT NVL(MAX(ROWNUM),0)
		FROM item where farmer_email like '%'||#{farmer_email}||'%'
		<choose>
			<when test="item_category_top_ref != 0 and item_category_top_idx != 0"> 
				and item_category_top_ref = #{item_category_top_ref} and item_category_top_idx = #{item_category_top_idx}
			</when>
			<when test="item_category_top_ref != 0"> 
				and item_category_top_ref = #{item_category_top_ref}
			</when>
		</choose>
		<choose>
			<when test="item_title != null">
			and item_title LIKE '%'||#{item_title}||'%'
			</when>
		</choose>
	</select>
	
	<select id="getMyDetail" parameterType="int" resultType="itemDto">
		SELECT i.farmer_email, item_idx, item_title, item_price, item_stock, item_category_top_idx, item_content, item_image, farmer_name
		FROM item i inner join farmer f on i.farmer_email = f.farmer_email
		WHERE item_idx=#{item_idx}
	</select>
	<!--  *****************************************************************************  -->
	
	<select id="getNewList" parameterType="itemDto" resultType="itemDto">   	
      select result2.* from
      (SELECT result1.*, rownum as rnum
      FROM (SELECT item_idx, item_image, item_title, item_content, item_price, item_category_top_idx, item_category_top_ref
      FROM item ORDER BY item_idx DESC) result1 
      ) result2 <![CDATA[
      where rnum <5 ]]>
      order by rnum ASC
	</select>
	
	<select id="getCloseList" parameterType="itemDto" resultType="itemDto">
		SELECT * 
		FROM
		   (SELECT result1.*, ROWNUM AS rnum
		   FROM
	           (SELECT item_idx, item_title, item_price, item_content, item_image, item_stock, item_category_top_idx, item_category_top_ref
	        	FROM item
	        	ORDER BY item_stock ASC) result1)
	       <![CDATA[
	      where rnum < 5
	      ]]> 
      	order by rnum ASC
	</select>
	
	<select id="getVeganList" parameterType="itemDto" resultType="itemDto">
		SELECT result2.* 
		FROM
		   (SELECT result1.*, ROWNUM AS rnum
		   FROM
	           (SELECT item_idx, item_title, item_price, item_content, item_image, item_stock, item_category_top_idx, item_category_top_ref
	        	FROM item
	         <![CDATA[ where item_category_top_idx = 19 ]]>) result1
	         ) result2 <![CDATA[ where rnum < 5 ]]>
      	order by rnum ASC
      	
	</select>
	
	<select id="getCateCount" parameterType="itemDto" resultType="int">
      SELECT NVL(MAX(ROWNUM),0)
      FROM item
	      <choose>
	         <when test="item_title != null">
	            WHERE item_title LIKE '%'||#{item_title}||'%'
	         </when>
	      </choose>
   	</select>
   	
   	<select id="moreNewList" parameterType="itemDto" resultType="itemDto">
	   	select result2.* from
	      (SELECT result1.*, rownum as rnum
		      FROM (SELECT item_idx, item_image, item_title, item_content, item_price, item_category_top_idx, item_category_top_ref
			      FROM item ORDER BY item_idx DESC) result1 
			      <include refid="searchCondition"/>
		      ORDER BY rnum ASC) result2
	     WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
   	</select>
    
   	<select id="moreCloseList" parameterType="itemDto" resultType="itemDto">
   		select result2.* FROM
		   (SELECT result1.*, ROWNUM AS rnum
		   FROM
	           (SELECT item_idx, item_title, item_price, item_content, item_image, item_stock, item_category_top_idx, item_category_top_ref
	        	FROM item ORDER BY item_stock ASC) result1
	        	<include refid="searchCondition"/>
      		ORDER BY rnum ASC) result2
      	WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
   	</select>
   	
   	<select id="moreVeganList" parameterType="itemDto" resultType="itemDto">
   		SELECT result2.* 
		FROM
		   (SELECT result1.*, ROWNUM AS rnum
		   FROM
	           (SELECT item_idx, item_title, item_price, item_content, item_image, item_stock, item_category_top_idx, item_category_top_ref
	        	FROM item
		         	<![CDATA[ where item_category_top_idx = 19 ]]>) result1
		         <include refid="searchCondition"/>
      		ORDER BY rnum ASC) result2
      	WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
   	</select>
</mapper>